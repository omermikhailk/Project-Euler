"""
The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
"""


from helper import triangular_num
from math import floor, sqrt


def divisor_counter(limit):
    current_term = 1
    while True:
        div_counter = 0
        current_num = triangular_num(current_term)

        for i in range(1, floor(sqrt(current_num))):
            if not current_num % i:
                # Checks to see if the divisor pairs are a perfect
                # square, eg. 10 & 10
                if current_num / i == i:
                    div_counter += 1
                else:
                    div_counter += 2

        if div_counter > limit:
            return current_num
        current_term += 1


def main():
    print(divisor_counter(500))


if __name__ == '__main__':
    main()